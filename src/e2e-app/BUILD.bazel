load("//tools/dev-server:index.bzl", "dev_server")
load("//:packages.bzl", "MDC_PACKAGE_UMD_BUNDLES", "getAngularUmdTargets")
load("//tools:defaults.bzl", "ng_module", "sass_binary")
load("@npm//@angular/dev-infra-private/bazel:extract_js_module_output.bzl", "extract_js_module_output")

package(default_visibility = ["//visibility:public"])

# List of dependencies that are referenced in the `index.html` file.
devserverIndexHtmlDependencies = [
    "@npm//kagekiri",
    "@npm//material-components-web",
    "@npm//moment",
    "//src/material/prebuilt-themes:indigo-pink",
    ":index.html",
    ":theme",
]

exports_files([
    "protractor.conf.js",
    "start-devserver.js",
    "devserver-configure.js",
])

ng_module(
    name = "e2e-app",
    testonly = True,
    srcs = glob(
        ["**/*.ts"],
        exclude = ["test-util/**"],
    ),
    assets = glob(
        [
            "**/*.html",
            "**/*.css",
        ],
        exclude = ["index.html"],
    ),
    deps = [
        "//src/cdk-experimental/dialog",
        "//src/cdk-experimental/scrolling",
        "//src/cdk/drag-drop",
        "//src/cdk/overlay",
        "//src/cdk/scrolling",
        "//src/cdk/testing/tests:test_components",
        "//src/components-examples/material-experimental/mdc-card",
        "//src/components-examples/private",
        "//src/material-experimental/mdc-button",
        "//src/material-experimental/mdc-card",
        "//src/material-experimental/mdc-checkbox",
        "//src/material-experimental/mdc-chips",
        "//src/material-experimental/mdc-dialog",
        "//src/material-experimental/mdc-input",
        "//src/material-experimental/mdc-menu",
        "//src/material-experimental/mdc-progress-bar",
        "//src/material-experimental/mdc-progress-spinner",
        "//src/material-experimental/mdc-radio",
        "//src/material-experimental/mdc-slide-toggle",
        "//src/material-experimental/mdc-slider",
        "//src/material-experimental/mdc-table",
        "//src/material-experimental/mdc-tabs",
        "//src/material/button",
        "//src/material/checkbox",
        "//src/material/core",
        "//src/material/dialog",
        "//src/material/form-field",
        "//src/material/grid-list",
        "//src/material/icon",
        "//src/material/input",
        "//src/material/list",
        "//src/material/menu",
        "//src/material/progress-bar",
        "//src/material/progress-spinner",
        "//src/material/radio",
        "//src/material/sidenav",
        "//src/material/slide-toggle",
        "//src/material/tabs",
        "@npm//@angular/animations",
        "@npm//@angular/core",
        "@npm//@angular/forms",
        "@npm//@angular/platform-browser",
        "@npm//@angular/router",
    ],
)

sass_binary(
    name = "theme",
    src = "theme.scss",
    include_paths = [
        "external/npm/node_modules",
    ],
    deps = [
        "//src/material:theming_bundle",
        "//src/material-experimental:theming_bundle",
        "//src/material/core:theming_scss_lib",
    ],
)

extract_js_module_output(
    name = "e2e_app_scripts",
    include_declarations = False,
    include_default_files = False,
    testonly = True,
    # `JSModuleInfo` resolves to the devmode sources from TypeScript targets. See:
    # https://github.com/bazelbuild/rules_nodejs/blob/stable/packages/typescript/internal/build_defs.bzl#L334-L337
    # Note: We cannot use the named JS module provider because not all dependencies are
    # necessarily captured as named module. See: https://github.com/angular/components/commit/94289397cac94ca86a292b2cd64945df52bbb7fb.
    provider = "JSNamedModuleInfo",
    tags = ["manual"],
    deps = [":e2e-app"],
)

dev_server(
    name = "devserver",
    testonly = True,
    additional_root_paths = [
        "npm/node_modules",
    ],
    port = 4200,
    # Scripts which will be included in the serving_path bundle after RequireJS has been loaded.
    index_bootstrap_scripts = [
        "@npm//:node_modules/core-js-bundle/minified.js",
        "@npm//:node_modules/zone.js/dist/zone.min.js",
        "@npm//:node_modules/kagekiri/dist/kagekiri.umd.min.js",
        "@npm//:node_modules/requirejs/require.js",
        ":devserver-configure.js",
        "//tools/rxjs:rxjs_umd_modules",
        "@npm//:node_modules/tslib/tslib.js",
        ":e2e_app_scripts",
    ] + getAngularUmdTargets() + MDC_PACKAGE_UMD_BUNDLES.values(),
    # Name of the generated `concatjs` bundle that is built based on the labels in `deps` and `scripts`.
    srcs = devserverIndexHtmlDependencies,
    tags = ["manual"],
)
